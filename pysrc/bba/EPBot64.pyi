"""Stub file for EPBot64"""
from typing import List


class EPBot:
    Bidding_Skills: int
    Defensive_Skills: int
    scoring: int

    def Copyright(self) -> str: ...

    def convention_index(self, _val: str) -> int: ...

    def convention_name(self, _val: int) -> str: ...

    def get_Bidding_Skills(self) -> int: ...

    def get_Defensive_Skills(self) -> int: ...

    def get_SD_tricks(self, _val1: List[str], _val2: List[int]) -> List[int]: ...

    def get_bid(self) -> int: ...

    def get_convention_name(self, _val1: int) -> str: ...

    def get_conventions(self, _val1: int, val2_str) -> bool: ...

    def get_hand(self, _val1: int) -> str: ...

    def get_info_feature(self, _val1: int) -> List[int]: ...

    def get_info_honors(self, _val1: int) -> List[int]: ...

    def get_info_max_length(self, _val1: int) -> List[int]: ...

    def get_info_meaning(self, _val1: int) -> str: ...

    def get_info_min_length(self, _val1: int) -> List[int]: ...

    def get_info_probable_length(self, _val1: int) -> List[int]: ...

    def get_info_stoppers(self, _val1: int) -> List[int]: ...

    def get_info_strength(self, _val1: int) -> List[int]: ...

    def get_info_suit_power(self, _val1: int) -> List[int]: ...

    def get_longers(self, _val1: int) -> str: ...

    def get_opponent_type(self, _val1: int) -> int: ...

    def get_probable_level(self, _val1: int) -> int: ...

    def get_probable_levels(self) -> List[int]: ...

    def get_scoring(self) -> int: ...

    def get_system_type(self, side: int) -> int: ...

    def get_used_conventions(self, _val1: int) -> int: ...

    def info_alerting(self, _val1: int) -> bool: ...

    def interpret_bid(self, _val1: int): ...

    def new_hand(self, position: int, hand: List[str], dealer: int, vulnerability: int, _val4: bool=True): ...

    def set_Bidding_Skills(self, _val1: int): ...

    def set_Defensive_Skills(self, _val1: int): ...

    def set_bid(self, player: int, bid: int, _val1: bool=False): ...

    def set_conventions(self, side: int, convention: str, _val1: bool): ...

    def set_info_feature(self, _val1: int, _val2: List[int]): ...

    def set_info_honors(self, _val1: int, _val2: List[int]): ...

    def set_info_max_length(self, _val1: int, _val2: List[int]): ...

    def set_info_meaning(self, _val1: int, meaning: str): ...

    def set_info_min_length(self, player: int, min_length: List[int]): ...

    def set_info_probable_length(self, player: int, probable_length: List[int]): ...

    def set_info_stoppers(self, player: int, stoppers: List[int]): ...

    def set_info_strength(self, player: int, strength: List[int]): ...

    def set_info_suit_power(self, player: int, suit_power: List[int]): ...

    def set_opponent_type(self, player: int, type: int): ...

    def set_scoring(self, scoring: int): ...

    def set_system_type(self, side: int, system_type: int): ...

    def set_used_conventions(self, _val1: int, _val2: int): ...

    def system_name(self, side: int) -> str: ...

    def version(self) -> int: ...
